type: edu
files:
- name: src/index.html
  visible: true
  text: |-
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Hello, World!</title>
    </head>
    <body>

    </body>
    </html>
  learner_created: false
- name: test/test.js
  visible: false
  text: |
    const puppeteer = require('puppeteer');
    const path = require('path');
    // '..' since we're in the hstest/ subdirectory; learner is supposed to have src/index.html
    const pagePath = 'file://' + path.resolve(__dirname, '../src/index.html');

    const hs = require('hs-test-web');

    const sleep = (ms) => new Promise(res => setTimeout(res, ms));

    async function stageTest() {
        const browser = await puppeteer.launch({
            headless: false,
            defaultViewport: null,
            args:['--start-maximized']
        });

        const page = await browser.newPage();
        await page.goto(pagePath);

        page.on('console', msg => console.log(msg.text()));

        let selector = 'button[class="open-window"]';
        page.evaluate((selector) => document.querySelector(selector).click(), selector);

        await sleep(1000);

        let result = await hs.testPage(page,
            // Test #1 - check if the document has the header
            () => {
                let headers = document.getElementsByTagName('header');

                if (headers === null || headers.length === 0) {
                    return hs.wrong('Cannot find the header in the document.');
                } else if (headers.length > 1) {
                    return hs.wrong('Found more than one header in the document.');
                }

                return hs.correct();
            },

            // Test #2 - check if the document has at least one <nav> element
            () => {
                let nav = document.getElementsByTagName('nav');

                if (nav === null || nav.length === 0) {
                    return hs.wrong('Cannot find the nav element on your web page.');
                }

                return hs.correct();
            },

            // Test #3 - check if the document has the <h1> element
            () => {
                let headings1 = document.getElementsByTagName('h1');

                if (headings1 === null || headings1.length === 0) {
                    return hs.wrong('Cannot find h1 element on your web page.');
                }

                let header = headings1[0]
                let title = header.textContent || header.innerText;

                if (!title || title.length === 0) {
                    return hs.wrong('Cannot find a text within h1 element');
                }

                return hs.correct();
            },

            // Test #4 - check if the document has the <footer> element
            () => {
                let footers = document.getElementsByTagName('footer');

                if (footers === null || footers.length === 0) {
                    return hs.wrong('Cannot find the footer in the document.');
                } else if (footers.length > 1) {
                    return hs.wrong('Found more than one footer in the document.');
                }

                return hs.correct();
            },

            // Test #5 - check if the document has at least three section elements
            () => {
                let sections = document.getElementsByTagName('section');

                if (sections === null || sections.length < 3) {
                    return hs.wrong(`Cannot find tree sections elements. There are only ${sections.length}.`);
                }

                return hs.correct();
            },

            // Test #6 - check the "about me" section
            () => {
                let sections = document.getElementById('about');

                if (sections === null || sections.length < 1) {
                    return hs.wrong('Cannot find a section with the "about" id.');
                }

                return hs.correct();
            },

            // Test #7 - check the "portfolio" section
            () => {
                let sections = document.getElementById('portfolio');

                if (sections === null || sections.length < 1) {
                    return hs.wrong('Cannot find a section with the "portfolio" id.');
                }

                return hs.correct();
            },

            // Test #8 - check the "contacts" section
            () => {
                let sections = document.getElementById('contacts');

                if (sections === null || sections.length < 1) {
                    return hs.wrong('Cannot find a section with the "contacts" id.');
                }

                return hs.correct();
            },

            // Test #9 - check header and footer background colors
            () => {
                function getRealColor(elem) {
                    try {
                        while (elem) {
                            let color = window.getComputedStyle(elem).backgroundColor;
                            if (color !== "rgba(0, 0, 0, 0)") {
                                let match = color.match(/^rgba?\((\d+), (\d+), (\d+)(, [\d.]+)?\)$/i);
                                return {
                                    red: Number(match[1]),
                                    green: Number(match[2]),
                                    blue: Number(match[3]),
                                    hex: Number(match[1]) * 65536 + Number(match[2]) * 256 + Number(match[3])
                                };
                            }
                            elem = elem.parentElement;
                        }
                    } catch (e) {
                        return null;
                    }
                    return null;
                }

                let headers = document.getElementsByTagName('header');

                if (headers === null || headers.length === 0) {
                    return hs.wrong('Cannot find the header in the document.');
                } else if (headers.length > 1) {
                    return hs.wrong('Found more than one header in the document.');
                }

                let hasBackgroundImage = getComputedStyle(headers[0]).background.includes('url');

                let headerBack = getRealColor(headers[0]);
                let noCustomHeaderColor = headerBack === null || headerBack.hex === 0xFFFFFF;
                if (noCustomHeaderColor && !hasBackgroundImage) {
                    return hs.wrong("Looks like header's background color is not set. " +
                        "It should be an image or some non-white color.")
                }

                let footers = document.getElementsByTagName('footer');

                if (footers === null || footers.length === 0) {
                    return hs.wrong('Cannot find the footer in the document.');
                } else if (headers.length > 1) {
                    return hs.wrong('Found more than one footer in the document.');
                }

                hasBackgroundImage = getComputedStyle(footers[0]).background.includes('url');

                let footerBack = getRealColor(footers[0]);
                let noCustomFooterColor = footerBack === null || footerBack.hex === 0xFFFFFF;
                if (noCustomFooterColor && !hasBackgroundImage) {
                    return hs.wrong("Looks like footer's background color is not set. " +
                        "It should be an image or some non-white color.")
                }

                return hs.correct()
            },

            // Test #10 - check click button and show popup window
            () => {
                let buttons = document.getElementsByClassName('open-window');

                if (buttons === null || buttons.length === 0) {
                    return hs.wrong('Cannot find a button with the class "open-window" to open the pop-up window.');
                }

                let forms = document.getElementsByClassName('window');

                if (forms === null || forms.length === 0) {
                    return hs.wrong('Cannot find the element with the class "window".');
                }

                return hs.correct()
            },

            // Test #11 -  check that the page has a hamburger menu
            () => {
                let buttons = document.getElementsByClassName('hamburger');

                if (buttons === null || buttons.length === 0) {
                    return hs.wrong('Not find the hamburger menu on your page. Create it and set the "hamburger" class to the tag that wraps the menu elements.');
                }
                return hs.correct()
            }
        );

        await browser.close();
        return result;
    }


    jest.setTimeout(30000);
    test("Test stage", async () => {
            let result = await stageTest();
            if (result['type'] === 'wrong') {
                fail(result['message']);
            }
        }
    );
  learner_created: false
- name: src/scripts.js
  visible: true
  text: |2+

        let modal = document.getElementById("project_flashCard");
        let openCloseButton = document.getElementById("openCloseButton");

        openCloseButton.onclick= function (){
            modal.style.display= "block";
        }
        window.onclick = function (event){
            if(event.target == modal){
                modal.style.display = "none";
            }
        }


  learner_created: true
- name: src/styles.css
  visible: true
  text: |-
    * {
        margin: 0;
        padding: 0;
        list-style: none;
        text-decoration: none;
    }

    img {
        max-width: 300px;
    }

    .site-header {
        width: 100%;
        height: 20vw;
        display: block;
        /*background-color: #101010;*/
        color: white;
        background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("images/header_background.jpg");
        background-repeat: no-repeat;
        background-position: center;
        background-size: cover;
    }

    .inner-header {
        width: 90%;
        height: 100%;
        display: block;
        margin: 0 auto;
    }

    .logo_container {
        height: 100%;
        display: table;
        float: left;
    }

    .logo_container h1 {
        color: white;
        height: 100%;
        display: table-cell;
        vertical-align: middle;
        font-size: 32px;
    }

    .nav_bar {
        float: right;
        height: 100%;
    }

    .nav_bar a {
        height: auto;
        display: table;
        float: left;
        padding: 0px 20px;
        text-decoration: none;
        font-size: 17px;
        text-align: center;
        vertical-align: middle;
        color: #f2f2f2;
        text-transform: uppercase;
    }

    .nav_bar a:hover {
        background-color: #ddd;
        color: black;
    }

    .nav_bar a.active {
        background-color: #4CAF50;
        color: white;
    }

    .nav_bar a:last-child {
        padding-right: 0;
    }

    #about {
        background-color: #CBD1D2;
        width: 100%;
        height: 20vw;
        display: block;

    }

    .image_container {
        padding: 20px;
    }

    .image {
        position: absolute;

    }

    .back_image {
        height: 250px;
        width: 250px;
    }

    .front_image {
        margin: 30px 0 0 150px;
        width: 200px;
        height: 210px;
    }

    #about .content {
        position: relative;
        float: left;
        width: 30%;
        margin-left: 22%;
        text-align: justify;
        font-size: 17px;
        flex-wrap: wrap;
        vertical-align: middle;
    }

    .content h2 {
        margin: 10px;
    }

    .content strong {
        padding: 10px 0;
    }

    .site-footer {
        position: relative;
        background-color: #CBD1D2;
        vertical-align: middle;
        padding: 10px;
    }

    .site-footer img {
        width: 3%;
        height: 3%;
        margin: 5px;
    }


    .card {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        max-width: 370px;
        margin: auto;
        padding: 20px;
        text-align: center;
    }

    .card_title {
        color: grey;
        font-size: 18px;
    }

    .card_subtitle {
        color: grey;
        font-size: 16px;
        text-align: justify;
        line-height: 30px;
    }

    .card button {
        border: none;
        outline: 0;
        display: inline-block;
        padding: 8px;
        color: white;
        background-color: #000;
        text-align: center;
        cursor: pointer;
        width: 20%;
        font-size: 18px;
        margin-top: 20px;
    }

    .card_description {
        text-align: center;
        line-height: 20px;
        color: gray;
        width: 100%;
    }

    .card_subtitle a {
        text-decoration: none;
        font-size: 16px;
        color: black;
    }

    button:hover, .card_subtitle a:hover {
        opacity: 0.7;
    }
  learner_created: true
feedback_link: https://hyperskill.org/projects/137/stages/734/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: Thu, 07 Jan 2021 23:54:38 UTC
record: 5
